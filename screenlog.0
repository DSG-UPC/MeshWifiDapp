connection not open on send()
shit didn't work.  here's why: Error: connection not open
connection not open on send()
shit didn't work.  here's why: Error: connection not open
internal/modules/cjs/loader.js:589
    throw err;
    ^

Error: Cannot find module '/home/sergio/workspace/Ammbr/MeshWifiDappOracle/oracle.js'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:587:15)
    at Function.Module._load (internal/modules/cjs/loader.js:513:25)
    at Function.Module.runMain (internal/modules/cjs/loader.js:760:12)
    at startup (internal/bootstrap/node.js:303:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:872:3)
WebsocketProvider {
  responseCallbacks: {},
  notificationCallbacks:
   [ [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m ],
  connection:
   W3CWebSocket {
     _listeners: {},
     addEventListener: [36m[Function: _addEventListener][39m,
     removeEventListener: [36m[Function: _removeEventListener][39m,
     dispatchEvent: [36m[Function: _dispatchEvent][39m,
     _url: [32m'ws://10.1.24.71:8601'[39m,
     _readyState: [33m1[39m,
     _protocol: [90mundefined[39m,
     _extensions: [],
     _bufferedAmount: [33m0[39m,
     _binaryType: [32m'arraybuffer'[39m,
     _connection:
      WebSocketConnection {
        _debug:
         { [Function: debug]
           namespace: [32m'websocket:connection'[39m,
           enabled: [33mfalse[39m,
           useColors: [33mtrue[39m,
           color: [33m2[39m,
           inspectOpts: {},
           printOutput: [36m[Function][39m },
        _events:
         [Object: null prototype] {
           newListener: [36m[Function][39m,
           removeListener: [36m[Function][39m,
           close: [36m[Function][39m,
           message: [36m[Function][39m },
        _eventsCount: [33m4[39m,
        _maxListeners: [90mundefined[39m,
        _pingListenerCount: [33m0[39m,
        config:
         { maxReceivedFrameSize: [33m1048576[39m,
           maxReceivedMessageSize: [33m8388608[39m,
           fragmentOutgoingMessages: [33mtrue[39m,
           fragmentationThreshold: [33m16384[39m,
           webSocketVersion: [33m13[39m,
           assembleFragments: [33mtrue[39m,
           disableNagleAlgorithm: [33mtrue[39m,
           closeTimeout: [33m5000[39m,
           tlsOptions: {} },
        socket:
         Socket {
           connecting: [33mfalse[39m,
           _hadError: [33mfalse[39m,
           _handle:
            TCP {
              reading: [33mtrue[39m,
              onread: [36m[Function: onStreamRead][39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m },
           _parent: [1mnull[22m,
           _host: [1mnull[22m,
           _readableState:
            ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           _events:
            [Object: null prototype] {
              end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
              error: [36m[Function: bound ][39m,
              close: [36m[Function: bound ][39m,
              drain: [36m[Function: bound ][39m,
              pause: [36m[Function: bound ][39m,
              resume: [36m[Function: bound ][39m,
              data: [36m[Function: bound ][39m },
           _eventsCount: [33m7[39m,
           _maxListeners: [90mundefined[39m,
           _writableState:
            WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              bufferedRequest: [1mnull[22m,
              lastBufferedRequest: [1mnull[22m,
              pendingcb: [33m0[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              bufferedRequestCount: [33m0[39m,
              corkedRequestsFree:
               { next: [1mnull[22m,
                 entry: [1mnull[22m,
                 finish: [36m[Function: bound onCorkedFinish][39m } },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           _sockname: [1mnull[22m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           server: [1mnull[22m,
           _server: [1mnull[22m,
           parser: [1mnull[22m,
           _httpMessage: [1mnull[22m,
           _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
           timeout: [33m0[39m,
           [[32mSymbol(asyncId)[39m]: [33m9[39m,
           [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
           [[32mSymbol(timeout)[39m]: [1mnull[22m,
           [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
           [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
        protocol: [90mundefined[39m,
        extensions: [],
        remoteAddress: [32m'10.1.24.71'[39m,
        closeReasonCode: [33m-1[39m,
        closeDescription: [1mnull[22m,
        closeEventEmitted: [33mfalse[39m,
        maskOutgoingPackets: [33mtrue[39m,
        maskBytes: <Buffer 4c 3b 87 25>,
        frameHeader: <Buffer 81 7e 01 31 00 00 00 00 00 00>,
        bufferList:
         BufferList {
           _events: [Object: null prototype] {},
           _eventsCount: [33m0[39m,
           _maxListeners: [90mundefined[39m,
           encoding: [90mundefined[39m,
           construct:
            { [Function: Buffer]
              poolSize: [33m8192[39m,
              from: [36m[Function: from][39m,
              of: [36m[Function: of][39m,
              alloc: [36m[Function: alloc][39m,
              allocUnsafe: [36m[Function: allocUnsafe][39m,
              allocUnsafeSlow: [36m[Function: allocUnsafeSlow][39m,
              isBuffer: [36m[Function: isBuffer][39m,
              compare: [36m[Function: compare][39m,
              isEncoding: [36m[Function: isEncoding][39m,
              concat: [36m[Function: concat][39m,
              byteLength: [36m[Function: byteLength][39m,
              [[32mSymbol(kIsEncodingSymbol)[39m]: [36m[Function: isEncoding][39m },
           length: [36m[Getter][39m,
           write: [36m[Function][39m,
           end: [36m[Function][39m,
           push: [36m[Function][39m,
           forEach: [36m[Function][39m,
           join: [36m[Function][39m,
           joinInto: [36m[Function][39m,
           advance: [36m[Function][39m,
           take: [36m[Function][39m,
           toString: [36m[Function][39m },
        currentFrame:
         WebSocketFrame {
           maskBytes: <Buffer 4c 3b 87 25>,
           frameHeader: <Buffer 81 7e 01 31 00 00 00 00 00 00>,
           config:
            { maxReceivedFrameSize: [33m1048576[39m,
              maxReceivedMessageSize: [33m8388608[39m,
              fragmentOutgoingMessages: [33mtrue[39m,
              fragmentationThreshold: [33m16384[39m,
              webSocketVersion: [33m13[39m,
              assembleFragments: [33mtrue[39m,
              disableNagleAlgorithm: [33mtrue[39m,
              closeTimeout: [33m5000[39m,
              tlsOptions: {} },
           maxReceivedFrameSize: [33m1048576[39m,
           protocolError: [33mfalse[39m,
           frameTooLarge: [33mfalse[39m,
           invalidCloseFrameLength: [33mfalse[39m,
           parseState: [33m1[39m,
           closeStatus: [33m-1[39m },
        fragmentationSize: [33m0[39m,
        frameQueue: [],
        connected: [33mtrue[39m,
        state: [32m'open'[39m,
        waitingForCloseResponse: [33mfalse[39m,
        receivedEnd: [33mfalse[39m,
        closeTimeout: [33m5000[39m,
        assembleFragments: [33mtrue[39m,
        maxReceivedMessageSize: [33m8388608[39m,
        outputBufferFull: [33mfalse[39m,
        inputPaused: [33mfalse[39m,
        receivedDataHandler: [36m[Function: bound ][39m,
        _closeTimerHandler: [36m[Function: bound ][39m,
        webSocketVersion: [33m13[39m },
     _client:
      WebSocketClient {
        _events:
         [Object: null prototype] { connect: [36m[Function][39m, connectFailed: [36m[Function][39m },
        _eventsCount: [33m2[39m,
        _maxListeners: [90mundefined[39m,
        config:
         { maxReceivedFrameSize: [33m1048576[39m,
           maxReceivedMessageSize: [33m8388608[39m,
           fragmentOutgoingMessages: [33mtrue[39m,
           fragmentationThreshold: [33m16384[39m,
           webSocketVersion: [33m13[39m,
           assembleFragments: [33mtrue[39m,
           disableNagleAlgorithm: [33mtrue[39m,
           closeTimeout: [33m5000[39m,
           tlsOptions: {} },
        _req: [1mnull[22m,
        protocols: [],
        origin: [90mundefined[39m,
        url:
         Url {
           protocol: [32m'ws:'[39m,
           slashes: [33mtrue[39m,
           auth: [1mnull[22m,
           host: [32m'10.1.24.71:8601'[39m,
           port: [32m'8601'[39m,
           hostname: [32m'10.1.24.71'[39m,
           hash: [1mnull[22m,
           search: [1mnull[22m,
           query: [1mnull[22m,
           pathname: [1mnull[22m,
           path: [1mnull[22m,
           href: [32m'ws://10.1.24.71:8601'[39m },
        secure: [33mfalse[39m,
        base64nonce: [32m'BSSSXQsIiJ6jxe7CRDEpEA=='[39m,
        socket:
         Socket {
           connecting: [33mfalse[39m,
           _hadError: [33mfalse[39m,
           _handle:
            TCP {
              reading: [33mtrue[39m,
              onread: [36m[Function: onStreamRead][39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m },
           _parent: [1mnull[22m,
           _host: [1mnull[22m,
           _readableState:
            ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           _events:
            [Object: null prototype] {
              end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
              error: [36m[Function: bound ][39m,
              close: [36m[Function: bound ][39m,
              drain: [36m[Function: bound ][39m,
              pause: [36m[Function: bound ][39m,
              resume: [36m[Function: bound ][39m,
              data: [36m[Function: bound ][39m },
           _eventsCount: [33m7[39m,
           _maxListeners: [90mundefined[39m,
           _writableState:
            WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              bufferedRequest: [1mnull[22m,
              lastBufferedRequest: [1mnull[22m,
              pendingcb: [33m0[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              bufferedRequestCount: [33m0[39m,
              corkedRequestsFree:
               { next: [1mnull[22m,
                 entry: [1mnull[22m,
                 finish: [36m[Function: bound onCorkedFinish][39m } },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           _sockname: [1mnull[22m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           server: [1mnull[22m,
           _server: [1mnull[22m,
           parser: [1mnull[22m,
           _httpMessage: [1mnull[22m,
           _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
           timeout: [33m0[39m,
           [[32mSymbol(asyncId)[39m]: [33m9[39m,
           [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
           [[32mSymbol(timeout)[39m]: [1mnull[22m,
           [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
           [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
        response:
         IncomingMessage {
           _readableState:
            ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [1mnull[22m,
              ended: [33mtrue[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mfalse[39m,
              sync: [33mtrue[39m,
              needReadable: [33mfalse[39m,
              emittedReadable: [33mtrue[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              emitClose: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           _events: [Object: null prototype] {},
           _eventsCount: [33m0[39m,
           _maxListeners: [90mundefined[39m,
           socket:
            Socket {
              connecting: [33mfalse[39m,
              _hadError: [33mfalse[39m,
              _handle:
               TCP {
                 reading: [33mtrue[39m,
                 onread: [36m[Function: onStreamRead][39m,
                 onconnection: [1mnull[22m,
                 [[32mSymbol(owner)[39m]: [36m[Circular][39m },
              _parent: [1mnull[22m,
              _host: [1mnull[22m,
              _readableState:
               ReadableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                 length: [33m0[39m,
                 pipes: [1mnull[22m,
                 pipesCount: [33m0[39m,
                 flowing: [33mtrue[39m,
                 ended: [33mfalse[39m,
                 endEmitted: [33mfalse[39m,
                 reading: [33mtrue[39m,
                 sync: [33mfalse[39m,
                 needReadable: [33mtrue[39m,
                 emittedReadable: [33mfalse[39m,
                 readableListening: [33mfalse[39m,
                 resumeScheduled: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 awaitDrain: [33m0[39m,
                 readingMore: [33mfalse[39m,
                 decoder: [1mnull[22m,
                 encoding: [1mnull[22m },
              readable: [33mtrue[39m,
              _events:
               [Object: null prototype] {
                 end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
                 error: [36m[Function: bound ][39m,
                 close: [36m[Function: bound ][39m,
                 drain: [36m[Function: bound ][39m,
                 pause: [36m[Function: bound ][39m,
                 resume: [36m[Function: bound ][39m,
                 data: [36m[Function: bound ][39m },
              _eventsCount: [33m7[39m,
              _maxListeners: [90mundefined[39m,
              _writableState:
               WritableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 finalCalled: [33mfalse[39m,
                 needDrain: [33mfalse[39m,
                 ending: [33mfalse[39m,
                 ended: [33mfalse[39m,
                 finished: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 decodeStrings: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 length: [33m0[39m,
                 writing: [33mfalse[39m,
                 corked: [33m0[39m,
                 sync: [33mfalse[39m,
                 bufferProcessing: [33mfalse[39m,
                 onwrite: [36m[Function: bound onwrite][39m,
                 writecb: [1mnull[22m,
                 writelen: [33m0[39m,
                 bufferedRequest: [1mnull[22m,
                 lastBufferedRequest: [1mnull[22m,
                 pendingcb: [33m0[39m,
                 prefinished: [33mfalse[39m,
                 errorEmitted: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 bufferedRequestCount: [33m0[39m,
                 corkedRequestsFree:
                  { next: [1mnull[22m,
                    entry: [1mnull[22m,
                    finish: [36m[Function: bound onCorkedFinish][39m } },
              writable: [33mtrue[39m,
              allowHalfOpen: [33mfalse[39m,
              _sockname: [1mnull[22m,
              _pendingData: [1mnull[22m,
              _pendingEncoding: [32m''[39m,
              server: [1mnull[22m,
              _server: [1mnull[22m,
              parser: [1mnull[22m,
              _httpMessage: [1mnull[22m,
              _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
              timeout: [33m0[39m,
              [[32mSymbol(asyncId)[39m]: [33m9[39m,
              [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
              [[32mSymbol(timeout)[39m]: [1mnull[22m,
              [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
              [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
           connection:
            Socket {
              connecting: [33mfalse[39m,
              _hadError: [33mfalse[39m,
              _handle:
               TCP {
                 reading: [33mtrue[39m,
                 onread: [36m[Function: onStreamRead][39m,
                 onconnection: [1mnull[22m,
                 [[32mSymbol(owner)[39m]: [36m[Circular][39m },
              _parent: [1mnull[22m,
              _host: [1mnull[22m,
              _readableState:
               ReadableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                 length: [33m0[39m,
                 pipes: [1mnull[22m,
                 pipesCount: [33m0[39m,
                 flowing: [33mtrue[39m,
                 ended: [33mfalse[39m,
                 endEmitted: [33mfalse[39m,
                 reading: [33mtrue[39m,
                 sync: [33mfalse[39m,
                 needReadable: [33mtrue[39m,
                 emittedReadable: [33mfalse[39m,
                 readableListening: [33mfalse[39m,
                 resumeScheduled: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 awaitDrain: [33m0[39m,
                 readingMore: [33mfalse[39m,
                 decoder: [1mnull[22m,
                 encoding: [1mnull[22m },
              readable: [33mtrue[39m,
              _events:
               [Object: null prototype] {
                 end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
                 error: [36m[Function: bound ][39m,
                 close: [36m[Function: bound ][39m,
                 drain: [36m[Function: bound ][39m,
                 pause: [36m[Function: bound ][39m,
                 resume: [36m[Function: bound ][39m,
                 data: [36m[Function: bound ][39m },
              _eventsCount: [33m7[39m,
              _maxListeners: [90mundefined[39m,
              _writableState:
               WritableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 finalCalled: [33mfalse[39m,
                 needDrain: [33mfalse[39m,
                 ending: [33mfalse[39m,
                 ended: [33mfalse[39m,
                 finished: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 decodeStrings: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 length: [33m0[39m,
                 writing: [33mfalse[39m,
                 corked: [33m0[39m,
                 sync: [33mfalse[39m,
                 bufferProcessing: [33mfalse[39m,
                 onwrite: [36m[Function: bound onwrite][39m,
                 writecb: [1mnull[22m,
                 writelen: [33m0[39m,
                 bufferedRequest: [1mnull[22m,
                 lastBufferedRequest: [1mnull[22m,
                 pendingcb: [33m0[39m,
                 prefinished: [33mfalse[39m,
                 errorEmitted: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 bufferedRequestCount: [33m0[39m,
                 corkedRequestsFree:
                  { next: [1mnull[22m,
                    entry: [1mnull[22m,
                    finish: [36m[Function: bound onCorkedFinish][39m } },
              writable: [33mtrue[39m,
              allowHalfOpen: [33mfalse[39m,
              _sockname: [1mnull[22m,
              _pendingData: [1mnull[22m,
              _pendingEncoding: [32m''[39m,
              server: [1mnull[22m,
              _server: [1mnull[22m,
              parser: [1mnull[22m,
              _httpMessage: [1mnull[22m,
              _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
              timeout: [33m0[39m,
              [[32mSymbol(asyncId)[39m]: [33m9[39m,
              [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
              [[32mSymbol(timeout)[39m]: [1mnull[22m,
              [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
              [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
           httpVersionMajor: [33m1[39m,
           httpVersionMinor: [33m1[39m,
           httpVersion: [32m'1.1'[39m,
           complete: [33mtrue[39m,
           headers:
            { upgrade: [32m'websocket'[39m,
              connection: [32m'Upgrade'[39m,
              [32m'sec-websocket-accept'[39m: [32m'N1uESzZWEkSdJSXKxpjKq9TrgtE='[39m },
           rawHeaders:
            [ [32m'Upgrade'[39m,
              [32m'websocket'[39m,
              [32m'Connection'[39m,
              [32m'Upgrade'[39m,
              [32m'Sec-WebSocket-Accept'[39m,
              [32m'N1uESzZWEkSdJSXKxpjKq9TrgtE='[39m ],
           trailers: {},
           rawTrailers: [],
           aborted: [33mfalse[39m,
           upgrade: [33mtrue[39m,
           url: [32m''[39m,
           method: [1mnull[22m,
           statusCode: [33m101[39m,
           statusMessage: [32m'Switching Protocols'[39m,
           client:
            Socket {
              connecting: [33mfalse[39m,
              _hadError: [33mfalse[39m,
              _handle:
               TCP {
                 reading: [33mtrue[39m,
                 onread: [36m[Function: onStreamRead][39m,
                 onconnection: [1mnull[22m,
                 [[32mSymbol(owner)[39m]: [36m[Circular][39m },
              _parent: [1mnull[22m,
              _host: [1mnull[22m,
              _readableState:
               ReadableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                 length: [33m0[39m,
                 pipes: [1mnull[22m,
                 pipesCount: [33m0[39m,
                 flowing: [33mtrue[39m,
                 ended: [33mfalse[39m,
                 endEmitted: [33mfalse[39m,
                 reading: [33mtrue[39m,
                 sync: [33mfalse[39m,
                 needReadable: [33mtrue[39m,
                 emittedReadable: [33mfalse[39m,
                 readableListening: [33mfalse[39m,
                 resumeScheduled: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 awaitDrain: [33m0[39m,
                 readingMore: [33mfalse[39m,
                 decoder: [1mnull[22m,
                 encoding: [1mnull[22m },
              readable: [33mtrue[39m,
              _events:
               [Object: null prototype] {
                 end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
                 error: [36m[Function: bound ][39m,
                 close: [36m[Function: bound ][39m,
                 drain: [36m[Function: bound ][39m,
                 pause: [36m[Function: bound ][39m,
                 resume: [36m[Function: bound ][39m,
                 data: [36m[Function: bound ][39m },
              _eventsCount: [33m7[39m,
              _maxListeners: [90mundefined[39m,
              _writableState:
               WritableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 finalCalled: [33mfalse[39m,
                 needDrain: [33mfalse[39m,
                 ending: [33mfalse[39m,
                 ended: [33mfalse[39m,
                 finished: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 decodeStrings: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 length: [33m0[39m,
                 writing: [33mfalse[39m,
                 corked: [33m0[39m,
                 sync: [33mfalse[39m,
                 bufferProcessing: [33mfalse[39m,
                 onwrite: [36m[Function: bound onwrite][39m,
                 writecb: [1mnull[22m,
                 writelen: [33m0[39m,
                 bufferedRequest: [1mnull[22m,
                 lastBufferedRequest: [1mnull[22m,
                 pendingcb: [33m0[39m,
                 prefinished: [33mfalse[39m,
                 errorEmitted: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 bufferedRequestCount: [33m0[39m,
                 corkedRequestsFree:
                  { next: [1mnull[22m,
                    entry: [1mnull[22m,
                    finish: [36m[Function: bound onCorkedFinish][39m } },
              writable: [33mtrue[39m,
              allowHalfOpen: [33mfalse[39m,
              _sockname: [1mnull[22m,
              _pendingData: [1mnull[22m,
              _pendingEncoding: [32m''[39m,
              server: [1mnull[22m,
              _server: [1mnull[22m,
              parser: [1mnull[22m,
              _httpMessage: [1mnull[22m,
              _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
              timeout: [33m0[39m,
              [[32mSymbol(asyncId)[39m]: [33m9[39m,
              [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
              [[32mSymbol(timeout)[39m]: [1mnull[22m,
              [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
              [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
           _consuming: [33mfalse[39m,
           _dumped: [33mfalse[39m },
        firstDataChunk: [1mnull[22m },
     onerror: [36m[Function][39m,
     onclose: [36m[Function][39m,
     onmessage: [36m[Function][39m },
  lastChunk: [1mnull[22m }
Esto va dpm
Esto va dpm
Working from account  0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0
contract address: 0x656a9d889f66B48C21C77Ea17b9562C26C07fa42
starting event monitoring on contract: 0xeaC75889856949337890c2646754B9D36EB48c8c
(node:11469) DeprecationWarning: collection.ensureIndex is deprecated. Use createIndexes instead.
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=1
>>> [object Object]
status code: 200
Traffic (MB): 3000
status code: 200
Owner: 0x28b17326d08992f16d382db2923d0d8b4ff8adb0
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=2
>>> [object Object]
status code: 200
Traffic (MB): 2000
status code: 200
Owner: 0x77bf44c84ab15150baa1ae772836349788a7cf01
EVM call result:
 [object Object]
EVM call result:
 [object Object]
event data: {
  "address": "0xeaC75889856949337890c2646754B9D36EB48c8c",
  "blockNumber": 2574,
  "transactionHash": "0xb64decd4a497cd1be4cf4173e3e7bab88c251e1512d8b348a01cbf1c86087675",
  "transactionIndex": 0,
  "blockHash": "0x3f5072f120a7ce8d916399652bef1ea3099c68eb46c16650a718a0f9e296f290",
  "logIndex": 2,
  "removed": false,
  "id": "log_84566c07",
  "returnValues": {
    "0": "0x83fc90789a4cfc44bc84cb789ae1d78e567e5c25912339bb1501a66b9764e32e",
    "1": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "2": "recalculate_max_price",
    "3": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "4": "5000",
    "5": "1000000",
    "6": "1",
    "id": "0x83fc90789a4cfc44bc84cb789ae1d78e567e5c25912339bb1501a66b9764e32e",
    "recipient": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "queryType": "recalculate_max_price",
    "originator": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "owed": "5000",
    "funds": "1000000",
    "pricePerMB": "1"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0x83fc90789a4cfc44bc84cb789ae1d78e567e5c25912339bb1501a66b9764e32e000000000000000000000000bd0dd090941cf6e1a3ef579e6285c88d375c6e4900000000000000000000000000000000000000000000000000000000000000e000000000000000000000000028b17326d08992f16d382db2923d0d8b4ff8adb0000000000000000000000000000000000000000000000000000000000000138800000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000015726563616c63756c6174655f6d61785f7072696365",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 5000;
Funds: 1000000;
PricePerMB: 1;

New price is: 200
>>> [object Object]
EVM call result:
 [object Object]
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=1
>>> [object Object]
status code: 200
Traffic (MB): 3000
status code: 200
Owner: 0x28b17326d08992f16d382db2923d0d8b4ff8adb0
EVM call result:
 [object Object]
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=2
>>> [object Object]
status code: 200
Traffic (MB): 2000
status code: 200
Owner: 0x77bf44c84ab15150baa1ae772836349788a7cf01
EVM call result:
 [object Object]
event data: {
  "address": "0xeaC75889856949337890c2646754B9D36EB48c8c",
  "blockNumber": 2581,
  "transactionHash": "0x582a0d17076837f176762c075f4044705a363a99b7b90b13ad336abd62b1ce24",
  "transactionIndex": 0,
  "blockHash": "0xb4554b7cf5a4ded8a5ec1513100385fcbc266d5b908582196924e10ad983e5c0",
  "logIndex": 2,
  "removed": false,
  "id": "log_654b1b8c",
  "returnValues": {
    "0": "0x1f4f091071ccea1584b880ff4b1f08021e4baa3d5117b92557403a0bf0a1fcd1",
    "1": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "2": "recalculate_max_price",
    "3": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "4": "955000",
    "5": "995000",
    "6": "191",
    "id": "0x1f4f091071ccea1584b880ff4b1f08021e4baa3d5117b92557403a0bf0a1fcd1",
    "recipient": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "queryType": "recalculate_max_price",
    "originator": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "owed": "955000",
    "funds": "995000",
    "pricePerMB": "191"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0x1f4f091071ccea1584b880ff4b1f08021e4baa3d5117b92557403a0bf0a1fcd1000000000000000000000000bd0dd090941cf6e1a3ef579e6285c88d375c6e4900000000000000000000000000000000000000000000000000000000000000e000000000000000000000000028b17326d08992f16d382db2923d0d8b4ff8adb000000000000000000000000000000000000000000000000000000000000e927800000000000000000000000000000000000000000000000000000000000f2eb800000000000000000000000000000000000000000000000000000000000000bf0000000000000000000000000000000000000000000000000000000000000015726563616c63756c6174655f6d61785f7072696365",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 955000;
Funds: 995000;
PricePerMB: 191;

New price is: 191
>>> [object Object]
EVM call result:
 [object Object]
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=1
>>> [object Object]
status code: 200
Traffic (MB): 3000
status code: 200
Owner: 0x28b17326d08992f16d382db2923d0d8b4ff8adb0
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=2
>>> [object Object]
EVM call result:
 [object Object]
status code: 200
Traffic (MB): 2000
status code: 200
Owner: 0x77bf44c84ab15150baa1ae772836349788a7cf01
EVM call result:
 [object Object]
event data: {
  "address": "0xeaC75889856949337890c2646754B9D36EB48c8c",
  "blockNumber": 2587,
  "transactionHash": "0xbeb5fd899280dbbede60f7c9cf0a9f86e8876a75687659b10d79b8139fdfece9",
  "transactionIndex": 0,
  "blockHash": "0x0713fe5bc78dc15466a71cbf8fcf72fffea0675062ea3faddacf7b535a819cad",
  "logIndex": 0,
  "removed": false,
  "id": "log_b5bbd391",
  "returnValues": {
    "0": "0x1d8d4fc58f0e01863a766923dc8b2de79f919a065cebd9ee20a284761f05c32b",
    "1": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "2": "calculate_proportional",
    "3": "0x77bF44C84aB15150BAA1aE772836349788a7cF01",
    "4": "20000",
    "5": "40000",
    "6": "50000",
    "id": "0x1d8d4fc58f0e01863a766923dc8b2de79f919a065cebd9ee20a284761f05c32b",
    "recipient": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "queryType": "calculate_proportional",
    "originator": "0x77bF44C84aB15150BAA1aE772836349788a7cF01",
    "owed": "20000",
    "funds": "40000",
    "pricePerMB": "50000"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0x1d8d4fc58f0e01863a766923dc8b2de79f919a065cebd9ee20a284761f05c32b000000000000000000000000bd0dd090941cf6e1a3ef579e6285c88d375c6e4900000000000000000000000000000000000000000000000000000000000000e000000000000000000000000077bf44c84ab15150baa1ae772836349788a7cf010000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000009c40000000000000000000000000000000000000000000000000000000000000c350000000000000000000000000000000000000000000000000000000000000001663616c63756c6174655f70726f706f7274696f6e616c",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 20000;
Funds: 40000;
Total owed: 50000;

Proportional: 16000;
Provider: 0x77bF44C84aB15150BAA1aE772836349788a7cF01
>>> [object Object]
event data: {
  "address": "0xeaC75889856949337890c2646754B9D36EB48c8c",
  "blockNumber": 2587,
  "transactionHash": "0xbeb5fd899280dbbede60f7c9cf0a9f86e8876a75687659b10d79b8139fdfece9",
  "transactionIndex": 0,
  "blockHash": "0x0713fe5bc78dc15466a71cbf8fcf72fffea0675062ea3faddacf7b535a819cad",
  "logIndex": 1,
  "removed": false,
  "id": "log_42c352a0",
  "returnValues": {
    "0": "0x004cb94bc042e34efde7bf0e32c0274f8236aecb95ae4e8a2e4c7dfa265c9140",
    "1": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "2": "calculate_proportional",
    "3": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "4": "30000",
    "5": "40000",
    "6": "50000",
    "id": "0x004cb94bc042e34efde7bf0e32c0274f8236aecb95ae4e8a2e4c7dfa265c9140",
    "recipient": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "queryType": "calculate_proportional",
    "originator": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "owed": "30000",
    "funds": "40000",
    "pricePerMB": "50000"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0x004cb94bc042e34efde7bf0e32c0274f8236aecb95ae4e8a2e4c7dfa265c9140000000000000000000000000bd0dd090941cf6e1a3ef579e6285c88d375c6e4900000000000000000000000000000000000000000000000000000000000000e000000000000000000000000028b17326d08992f16d382db2923d0d8b4ff8adb000000000000000000000000000000000000000000000000000000000000075300000000000000000000000000000000000000000000000000000000000009c40000000000000000000000000000000000000000000000000000000000000c350000000000000000000000000000000000000000000000000000000000000001663616c63756c6174655f70726f706f7274696f6e616c",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 30000;
Funds: 40000;
Total owed: 50000;

Proportional: 24000;
Provider: 0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0
>>> [object Object]
event data: {
  "address": "0xeaC75889856949337890c2646754B9D36EB48c8c",
  "blockNumber": 2587,
  "transactionHash": "0xbeb5fd899280dbbede60f7c9cf0a9f86e8876a75687659b10d79b8139fdfece9",
  "transactionIndex": 0,
  "blockHash": "0x0713fe5bc78dc15466a71cbf8fcf72fffea0675062ea3faddacf7b535a819cad",
  "logIndex": 2,
  "removed": false,
  "id": "log_11045a37",
  "returnValues": {
    "0": "0x4d2d60845f9e15433e3cd5dabe26ba3c8d68d0892a13041f9f4aeee81baead56",
    "1": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "2": "recalculate_max_price",
    "3": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "4": "50000",
    "5": "40000",
    "6": "10",
    "id": "0x4d2d60845f9e15433e3cd5dabe26ba3c8d68d0892a13041f9f4aeee81baead56",
    "recipient": "0xbd0Dd090941cF6e1a3Ef579E6285c88d375C6e49",
    "queryType": "recalculate_max_price",
    "originator": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "owed": "50000",
    "funds": "40000",
    "pricePerMB": "10"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0x4d2d60845f9e15433e3cd5dabe26ba3c8d68d0892a13041f9f4aeee81baead56000000000000000000000000bd0dd090941cf6e1a3ef579e6285c88d375c6e4900000000000000000000000000000000000000000000000000000000000000e000000000000000000000000028b17326d08992f16d382db2923d0d8b4ff8adb0000000000000000000000000000000000000000000000000000000000000c3500000000000000000000000000000000000000000000000000000000000009c40000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000015726563616c63756c6174655f6d61785f7072696365",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 50000;
Funds: 40000;
PricePerMB: 10;

New price is: 8
>>> [object Object]
EVM call result:
 [object Object]
EVM call result:
 [object Object]
EVM call result:
 [object Object]
WebsocketProvider {
  responseCallbacks: {},
  notificationCallbacks:
   [ [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m,
     [36m[Function: requestManagerNotification][39m ],
  connection:
   W3CWebSocket {
     _listeners: {},
     addEventListener: [36m[Function: _addEventListener][39m,
     removeEventListener: [36m[Function: _removeEventListener][39m,
     dispatchEvent: [36m[Function: _dispatchEvent][39m,
     _url: [32m'ws://10.1.24.71:8601'[39m,
     _readyState: [33m1[39m,
     _protocol: [90mundefined[39m,
     _extensions: [],
     _bufferedAmount: [33m0[39m,
     _binaryType: [32m'arraybuffer'[39m,
     _connection:
      WebSocketConnection {
        _debug:
         { [Function: debug]
           namespace: [32m'websocket:connection'[39m,
           enabled: [33mfalse[39m,
           useColors: [33mtrue[39m,
           color: [33m2[39m,
           inspectOpts: {},
           printOutput: [36m[Function][39m },
        _events:
         [Object: null prototype] {
           newListener: [36m[Function][39m,
           removeListener: [36m[Function][39m,
           close: [36m[Function][39m,
           message: [36m[Function][39m },
        _eventsCount: [33m4[39m,
        _maxListeners: [90mundefined[39m,
        _pingListenerCount: [33m0[39m,
        config:
         { maxReceivedFrameSize: [33m1048576[39m,
           maxReceivedMessageSize: [33m8388608[39m,
           fragmentOutgoingMessages: [33mtrue[39m,
           fragmentationThreshold: [33m16384[39m,
           webSocketVersion: [33m13[39m,
           assembleFragments: [33mtrue[39m,
           disableNagleAlgorithm: [33mtrue[39m,
           closeTimeout: [33m5000[39m,
           tlsOptions: {} },
        socket:
         Socket {
           connecting: [33mfalse[39m,
           _hadError: [33mfalse[39m,
           _handle:
            TCP {
              reading: [33mtrue[39m,
              onread: [36m[Function: onStreamRead][39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m },
           _parent: [1mnull[22m,
           _host: [1mnull[22m,
           _readableState:
            ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           _events:
            [Object: null prototype] {
              end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
              error: [36m[Function: bound ][39m,
              close: [36m[Function: bound ][39m,
              drain: [36m[Function: bound ][39m,
              pause: [36m[Function: bound ][39m,
              resume: [36m[Function: bound ][39m,
              data: [36m[Function: bound ][39m },
           _eventsCount: [33m7[39m,
           _maxListeners: [90mundefined[39m,
           _writableState:
            WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              bufferedRequest: [1mnull[22m,
              lastBufferedRequest: [1mnull[22m,
              pendingcb: [33m0[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              bufferedRequestCount: [33m0[39m,
              corkedRequestsFree:
               { next: [1mnull[22m,
                 entry: [1mnull[22m,
                 finish: [36m[Function: bound onCorkedFinish][39m } },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           _sockname: [1mnull[22m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           server: [1mnull[22m,
           _server: [1mnull[22m,
           parser: [1mnull[22m,
           _httpMessage: [1mnull[22m,
           _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
           timeout: [33m0[39m,
           [[32mSymbol(asyncId)[39m]: [33m9[39m,
           [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
           [[32mSymbol(timeout)[39m]: [1mnull[22m,
           [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
           [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
        protocol: [90mundefined[39m,
        extensions: [],
        remoteAddress: [32m'10.1.24.71'[39m,
        closeReasonCode: [33m-1[39m,
        closeDescription: [1mnull[22m,
        closeEventEmitted: [33mfalse[39m,
        maskOutgoingPackets: [33mtrue[39m,
        maskBytes: <Buffer 14 12 f4 89>,
        frameHeader: <Buffer 81 7e 01 31 00 00 00 00 00 00>,
        bufferList:
         BufferList {
           _events: [Object: null prototype] {},
           _eventsCount: [33m0[39m,
           _maxListeners: [90mundefined[39m,
           encoding: [90mundefined[39m,
           construct:
            { [Function: Buffer]
              poolSize: [33m8192[39m,
              from: [36m[Function: from][39m,
              of: [36m[Function: of][39m,
              alloc: [36m[Function: alloc][39m,
              allocUnsafe: [36m[Function: allocUnsafe][39m,
              allocUnsafeSlow: [36m[Function: allocUnsafeSlow][39m,
              isBuffer: [36m[Function: isBuffer][39m,
              compare: [36m[Function: compare][39m,
              isEncoding: [36m[Function: isEncoding][39m,
              concat: [36m[Function: concat][39m,
              byteLength: [36m[Function: byteLength][39m,
              [[32mSymbol(kIsEncodingSymbol)[39m]: [36m[Function: isEncoding][39m },
           length: [36m[Getter][39m,
           write: [36m[Function][39m,
           end: [36m[Function][39m,
           push: [36m[Function][39m,
           forEach: [36m[Function][39m,
           join: [36m[Function][39m,
           joinInto: [36m[Function][39m,
           advance: [36m[Function][39m,
           take: [36m[Function][39m,
           toString: [36m[Function][39m },
        currentFrame:
         WebSocketFrame {
           maskBytes: <Buffer 14 12 f4 89>,
           frameHeader: <Buffer 81 7e 01 31 00 00 00 00 00 00>,
           config:
            { maxReceivedFrameSize: [33m1048576[39m,
              maxReceivedMessageSize: [33m8388608[39m,
              fragmentOutgoingMessages: [33mtrue[39m,
              fragmentationThreshold: [33m16384[39m,
              webSocketVersion: [33m13[39m,
              assembleFragments: [33mtrue[39m,
              disableNagleAlgorithm: [33mtrue[39m,
              closeTimeout: [33m5000[39m,
              tlsOptions: {} },
           maxReceivedFrameSize: [33m1048576[39m,
           protocolError: [33mfalse[39m,
           frameTooLarge: [33mfalse[39m,
           invalidCloseFrameLength: [33mfalse[39m,
           parseState: [33m1[39m,
           closeStatus: [33m-1[39m },
        fragmentationSize: [33m0[39m,
        frameQueue: [],
        connected: [33mtrue[39m,
        state: [32m'open'[39m,
        waitingForCloseResponse: [33mfalse[39m,
        receivedEnd: [33mfalse[39m,
        closeTimeout: [33m5000[39m,
        assembleFragments: [33mtrue[39m,
        maxReceivedMessageSize: [33m8388608[39m,
        outputBufferFull: [33mfalse[39m,
        inputPaused: [33mfalse[39m,
        receivedDataHandler: [36m[Function: bound ][39m,
        _closeTimerHandler: [36m[Function: bound ][39m,
        webSocketVersion: [33m13[39m },
     _client:
      WebSocketClient {
        _events:
         [Object: null prototype] { connect: [36m[Function][39m, connectFailed: [36m[Function][39m },
        _eventsCount: [33m2[39m,
        _maxListeners: [90mundefined[39m,
        config:
         { maxReceivedFrameSize: [33m1048576[39m,
           maxReceivedMessageSize: [33m8388608[39m,
           fragmentOutgoingMessages: [33mtrue[39m,
           fragmentationThreshold: [33m16384[39m,
           webSocketVersion: [33m13[39m,
           assembleFragments: [33mtrue[39m,
           disableNagleAlgorithm: [33mtrue[39m,
           closeTimeout: [33m5000[39m,
           tlsOptions: {} },
        _req: [1mnull[22m,
        protocols: [],
        origin: [90mundefined[39m,
        url:
         Url {
           protocol: [32m'ws:'[39m,
           slashes: [33mtrue[39m,
           auth: [1mnull[22m,
           host: [32m'10.1.24.71:8601'[39m,
           port: [32m'8601'[39m,
           hostname: [32m'10.1.24.71'[39m,
           hash: [1mnull[22m,
           search: [1mnull[22m,
           query: [1mnull[22m,
           pathname: [1mnull[22m,
           path: [1mnull[22m,
           href: [32m'ws://10.1.24.71:8601'[39m },
        secure: [33mfalse[39m,
        base64nonce: [32m'cyqF1AKUGp9Nc7Nq6jjoQg=='[39m,
        socket:
         Socket {
           connecting: [33mfalse[39m,
           _hadError: [33mfalse[39m,
           _handle:
            TCP {
              reading: [33mtrue[39m,
              onread: [36m[Function: onStreamRead][39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m },
           _parent: [1mnull[22m,
           _host: [1mnull[22m,
           _readableState:
            ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           _events:
            [Object: null prototype] {
              end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
              error: [36m[Function: bound ][39m,
              close: [36m[Function: bound ][39m,
              drain: [36m[Function: bound ][39m,
              pause: [36m[Function: bound ][39m,
              resume: [36m[Function: bound ][39m,
              data: [36m[Function: bound ][39m },
           _eventsCount: [33m7[39m,
           _maxListeners: [90mundefined[39m,
           _writableState:
            WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              bufferedRequest: [1mnull[22m,
              lastBufferedRequest: [1mnull[22m,
              pendingcb: [33m0[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              bufferedRequestCount: [33m0[39m,
              corkedRequestsFree:
               { next: [1mnull[22m,
                 entry: [1mnull[22m,
                 finish: [36m[Function: bound onCorkedFinish][39m } },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           _sockname: [1mnull[22m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           server: [1mnull[22m,
           _server: [1mnull[22m,
           parser: [1mnull[22m,
           _httpMessage: [1mnull[22m,
           _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
           timeout: [33m0[39m,
           [[32mSymbol(asyncId)[39m]: [33m9[39m,
           [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
           [[32mSymbol(timeout)[39m]: [1mnull[22m,
           [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
           [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
        response:
         IncomingMessage {
           _readableState:
            ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [1mnull[22m,
              ended: [33mtrue[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mfalse[39m,
              sync: [33mtrue[39m,
              needReadable: [33mfalse[39m,
              emittedReadable: [33mtrue[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              emitClose: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           _events: [Object: null prototype] {},
           _eventsCount: [33m0[39m,
           _maxListeners: [90mundefined[39m,
           socket:
            Socket {
              connecting: [33mfalse[39m,
              _hadError: [33mfalse[39m,
              _handle:
               TCP {
                 reading: [33mtrue[39m,
                 onread: [36m[Function: onStreamRead][39m,
                 onconnection: [1mnull[22m,
                 [[32mSymbol(owner)[39m]: [36m[Circular][39m },
              _parent: [1mnull[22m,
              _host: [1mnull[22m,
              _readableState:
               ReadableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                 length: [33m0[39m,
                 pipes: [1mnull[22m,
                 pipesCount: [33m0[39m,
                 flowing: [33mtrue[39m,
                 ended: [33mfalse[39m,
                 endEmitted: [33mfalse[39m,
                 reading: [33mtrue[39m,
                 sync: [33mfalse[39m,
                 needReadable: [33mtrue[39m,
                 emittedReadable: [33mfalse[39m,
                 readableListening: [33mfalse[39m,
                 resumeScheduled: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 awaitDrain: [33m0[39m,
                 readingMore: [33mfalse[39m,
                 decoder: [1mnull[22m,
                 encoding: [1mnull[22m },
              readable: [33mtrue[39m,
              _events:
               [Object: null prototype] {
                 end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
                 error: [36m[Function: bound ][39m,
                 close: [36m[Function: bound ][39m,
                 drain: [36m[Function: bound ][39m,
                 pause: [36m[Function: bound ][39m,
                 resume: [36m[Function: bound ][39m,
                 data: [36m[Function: bound ][39m },
              _eventsCount: [33m7[39m,
              _maxListeners: [90mundefined[39m,
              _writableState:
               WritableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 finalCalled: [33mfalse[39m,
                 needDrain: [33mfalse[39m,
                 ending: [33mfalse[39m,
                 ended: [33mfalse[39m,
                 finished: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 decodeStrings: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 length: [33m0[39m,
                 writing: [33mfalse[39m,
                 corked: [33m0[39m,
                 sync: [33mfalse[39m,
                 bufferProcessing: [33mfalse[39m,
                 onwrite: [36m[Function: bound onwrite][39m,
                 writecb: [1mnull[22m,
                 writelen: [33m0[39m,
                 bufferedRequest: [1mnull[22m,
                 lastBufferedRequest: [1mnull[22m,
                 pendingcb: [33m0[39m,
                 prefinished: [33mfalse[39m,
                 errorEmitted: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 bufferedRequestCount: [33m0[39m,
                 corkedRequestsFree:
                  { next: [1mnull[22m,
                    entry: [1mnull[22m,
                    finish: [36m[Function: bound onCorkedFinish][39m } },
              writable: [33mtrue[39m,
              allowHalfOpen: [33mfalse[39m,
              _sockname: [1mnull[22m,
              _pendingData: [1mnull[22m,
              _pendingEncoding: [32m''[39m,
              server: [1mnull[22m,
              _server: [1mnull[22m,
              parser: [1mnull[22m,
              _httpMessage: [1mnull[22m,
              _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
              timeout: [33m0[39m,
              [[32mSymbol(asyncId)[39m]: [33m9[39m,
              [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
              [[32mSymbol(timeout)[39m]: [1mnull[22m,
              [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
              [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
           connection:
            Socket {
              connecting: [33mfalse[39m,
              _hadError: [33mfalse[39m,
              _handle:
               TCP {
                 reading: [33mtrue[39m,
                 onread: [36m[Function: onStreamRead][39m,
                 onconnection: [1mnull[22m,
                 [[32mSymbol(owner)[39m]: [36m[Circular][39m },
              _parent: [1mnull[22m,
              _host: [1mnull[22m,
              _readableState:
               ReadableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                 length: [33m0[39m,
                 pipes: [1mnull[22m,
                 pipesCount: [33m0[39m,
                 flowing: [33mtrue[39m,
                 ended: [33mfalse[39m,
                 endEmitted: [33mfalse[39m,
                 reading: [33mtrue[39m,
                 sync: [33mfalse[39m,
                 needReadable: [33mtrue[39m,
                 emittedReadable: [33mfalse[39m,
                 readableListening: [33mfalse[39m,
                 resumeScheduled: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 awaitDrain: [33m0[39m,
                 readingMore: [33mfalse[39m,
                 decoder: [1mnull[22m,
                 encoding: [1mnull[22m },
              readable: [33mtrue[39m,
              _events:
               [Object: null prototype] {
                 end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
                 error: [36m[Function: bound ][39m,
                 close: [36m[Function: bound ][39m,
                 drain: [36m[Function: bound ][39m,
                 pause: [36m[Function: bound ][39m,
                 resume: [36m[Function: bound ][39m,
                 data: [36m[Function: bound ][39m },
              _eventsCount: [33m7[39m,
              _maxListeners: [90mundefined[39m,
              _writableState:
               WritableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 finalCalled: [33mfalse[39m,
                 needDrain: [33mfalse[39m,
                 ending: [33mfalse[39m,
                 ended: [33mfalse[39m,
                 finished: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 decodeStrings: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 length: [33m0[39m,
                 writing: [33mfalse[39m,
                 corked: [33m0[39m,
                 sync: [33mfalse[39m,
                 bufferProcessing: [33mfalse[39m,
                 onwrite: [36m[Function: bound onwrite][39m,
                 writecb: [1mnull[22m,
                 writelen: [33m0[39m,
                 bufferedRequest: [1mnull[22m,
                 lastBufferedRequest: [1mnull[22m,
                 pendingcb: [33m0[39m,
                 prefinished: [33mfalse[39m,
                 errorEmitted: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 bufferedRequestCount: [33m0[39m,
                 corkedRequestsFree:
                  { next: [1mnull[22m,
                    entry: [1mnull[22m,
                    finish: [36m[Function: bound onCorkedFinish][39m } },
              writable: [33mtrue[39m,
              allowHalfOpen: [33mfalse[39m,
              _sockname: [1mnull[22m,
              _pendingData: [1mnull[22m,
              _pendingEncoding: [32m''[39m,
              server: [1mnull[22m,
              _server: [1mnull[22m,
              parser: [1mnull[22m,
              _httpMessage: [1mnull[22m,
              _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
              timeout: [33m0[39m,
              [[32mSymbol(asyncId)[39m]: [33m9[39m,
              [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
              [[32mSymbol(timeout)[39m]: [1mnull[22m,
              [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
              [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
           httpVersionMajor: [33m1[39m,
           httpVersionMinor: [33m1[39m,
           httpVersion: [32m'1.1'[39m,
           complete: [33mtrue[39m,
           headers:
            { upgrade: [32m'websocket'[39m,
              connection: [32m'Upgrade'[39m,
              [32m'sec-websocket-accept'[39m: [32m'mIIEkWPaibxD+h1N3VESkBXrZwQ='[39m },
           rawHeaders:
            [ [32m'Upgrade'[39m,
              [32m'websocket'[39m,
              [32m'Connection'[39m,
              [32m'Upgrade'[39m,
              [32m'Sec-WebSocket-Accept'[39m,
              [32m'mIIEkWPaibxD+h1N3VESkBXrZwQ='[39m ],
           trailers: {},
           rawTrailers: [],
           aborted: [33mfalse[39m,
           upgrade: [33mtrue[39m,
           url: [32m''[39m,
           method: [1mnull[22m,
           statusCode: [33m101[39m,
           statusMessage: [32m'Switching Protocols'[39m,
           client:
            Socket {
              connecting: [33mfalse[39m,
              _hadError: [33mfalse[39m,
              _handle:
               TCP {
                 reading: [33mtrue[39m,
                 onread: [36m[Function: onStreamRead][39m,
                 onconnection: [1mnull[22m,
                 [[32mSymbol(owner)[39m]: [36m[Circular][39m },
              _parent: [1mnull[22m,
              _host: [1mnull[22m,
              _readableState:
               ReadableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                 length: [33m0[39m,
                 pipes: [1mnull[22m,
                 pipesCount: [33m0[39m,
                 flowing: [33mtrue[39m,
                 ended: [33mfalse[39m,
                 endEmitted: [33mfalse[39m,
                 reading: [33mtrue[39m,
                 sync: [33mfalse[39m,
                 needReadable: [33mtrue[39m,
                 emittedReadable: [33mfalse[39m,
                 readableListening: [33mfalse[39m,
                 resumeScheduled: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 awaitDrain: [33m0[39m,
                 readingMore: [33mfalse[39m,
                 decoder: [1mnull[22m,
                 encoding: [1mnull[22m },
              readable: [33mtrue[39m,
              _events:
               [Object: null prototype] {
                 end: [ [36m[Function: onReadableStreamEnd][39m, [36m[Function: bound ][39m ],
                 error: [36m[Function: bound ][39m,
                 close: [36m[Function: bound ][39m,
                 drain: [36m[Function: bound ][39m,
                 pause: [36m[Function: bound ][39m,
                 resume: [36m[Function: bound ][39m,
                 data: [36m[Function: bound ][39m },
              _eventsCount: [33m7[39m,
              _maxListeners: [90mundefined[39m,
              _writableState:
               WritableState {
                 objectMode: [33mfalse[39m,
                 highWaterMark: [33m16384[39m,
                 finalCalled: [33mfalse[39m,
                 needDrain: [33mfalse[39m,
                 ending: [33mfalse[39m,
                 ended: [33mfalse[39m,
                 finished: [33mfalse[39m,
                 destroyed: [33mfalse[39m,
                 decodeStrings: [33mfalse[39m,
                 defaultEncoding: [32m'utf8'[39m,
                 length: [33m0[39m,
                 writing: [33mfalse[39m,
                 corked: [33m0[39m,
                 sync: [33mfalse[39m,
                 bufferProcessing: [33mfalse[39m,
                 onwrite: [36m[Function: bound onwrite][39m,
                 writecb: [1mnull[22m,
                 writelen: [33m0[39m,
                 bufferedRequest: [1mnull[22m,
                 lastBufferedRequest: [1mnull[22m,
                 pendingcb: [33m0[39m,
                 prefinished: [33mfalse[39m,
                 errorEmitted: [33mfalse[39m,
                 emitClose: [33mfalse[39m,
                 bufferedRequestCount: [33m0[39m,
                 corkedRequestsFree:
                  { next: [1mnull[22m,
                    entry: [1mnull[22m,
                    finish: [36m[Function: bound onCorkedFinish][39m } },
              writable: [33mtrue[39m,
              allowHalfOpen: [33mfalse[39m,
              _sockname: [1mnull[22m,
              _pendingData: [1mnull[22m,
              _pendingEncoding: [32m''[39m,
              server: [1mnull[22m,
              _server: [1mnull[22m,
              parser: [1mnull[22m,
              _httpMessage: [1mnull[22m,
              _peername: { address: [32m'10.1.24.71'[39m, family: [32m'IPv4'[39m, port: [33m8601[39m },
              timeout: [33m0[39m,
              [[32mSymbol(asyncId)[39m]: [33m9[39m,
              [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
              [[32mSymbol(timeout)[39m]: [1mnull[22m,
              [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
              [[32mSymbol(kBytesWritten)[39m]: [33m0[39m },
           _consuming: [33mfalse[39m,
           _dumped: [33mfalse[39m },
        firstDataChunk: [1mnull[22m },
     onerror: [36m[Function][39m,
     onclose: [36m[Function][39m,
     onmessage: [36m[Function][39m },
  lastChunk: [1mnull[22m }
Esto va dpm
Esto va dpm
Working from account  0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0
contract address: 0x656a9d889f66B48C21C77Ea17b9562C26C07fa42
starting event monitoring on contract: 0x59246B6885660b49A43eaD1D655787b4e7fd51E5
(node:11554) DeprecationWarning: collection.ensureIndex is deprecated. Use createIndexes instead.
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=1
>>> [object Object]
status code: 200
Traffic (MB): 3000
status code: 200
Owner: 0x28b17326d08992f16d382db2923d0d8b4ff8adb0
EVM call result:
 [object Object]
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=2
>>> [object Object]
status code: 200
Traffic (MB): 2000
status code: 200
Owner: 0x77bf44c84ab15150baa1ae772836349788a7cf01
EVM call result:
 [object Object]
event data: {
  "address": "0x59246B6885660b49A43eaD1D655787b4e7fd51E5",
  "blockNumber": 2605,
  "transactionHash": "0x13ed2c6d2121dae5f214e9a443bb311f41cb6aa1216d7e5ca0deb0bb995a4a86",
  "transactionIndex": 0,
  "blockHash": "0xd3368c8980c04f3ec60d490e213e08e19b776070329bb35f5f0259cf5b2b576a",
  "logIndex": 2,
  "removed": false,
  "id": "log_183c31ce",
  "returnValues": {
    "0": "0xfd204c083c48d8cd79fcb329ce984e5421890806952f0b8ab713a1309ee6691c",
    "1": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "2": "recalculate_max_price",
    "3": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "4": "5000",
    "5": "1000000",
    "6": "1",
    "id": "0xfd204c083c48d8cd79fcb329ce984e5421890806952f0b8ab713a1309ee6691c",
    "recipient": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "queryType": "recalculate_max_price",
    "originator": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "owed": "5000",
    "funds": "1000000",
    "pricePerMB": "1"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0xfd204c083c48d8cd79fcb329ce984e5421890806952f0b8ab713a1309ee6691c0000000000000000000000004248cb10b8d7f5fb0b2ad54af561e54330aab25600000000000000000000000000000000000000000000000000000000000000e000000000000000000000000028b17326d08992f16d382db2923d0d8b4ff8adb0000000000000000000000000000000000000000000000000000000000000138800000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000015726563616c63756c6174655f6d61785f7072696365",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 5000;
Funds: 1000000;
PricePerMB: 1;

New price is: 200
>>> [object Object]
EVM call result:
 [object Object]
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=1
>>> [object Object]
status code: 200
Traffic (MB): 3000
status code: 200
Owner: 0x28b17326d08992f16d382db2923d0d8b4ff8adb0
EVM call result:
 [object Object]
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=2
>>> [object Object]
status code: 200
Traffic (MB): 2000
status code: 200
Owner: 0x77bf44c84ab15150baa1ae772836349788a7cf01
EVM call result:
 [object Object]
event data: {
  "address": "0x59246B6885660b49A43eaD1D655787b4e7fd51E5",
  "blockNumber": 2612,
  "transactionHash": "0xda2a5347a37a843cc3b716fdd6b88cf274384d46a3719af7789df938cea361f6",
  "transactionIndex": 0,
  "blockHash": "0x50f22f9956f174860e5856a20eebc3b9bc97a706ea08040c5529217806cba959",
  "logIndex": 2,
  "removed": false,
  "id": "log_1ae9366f",
  "returnValues": {
    "0": "0x3850de1bb8f63f41c7e24bcd322a2d0657d3b26c066ea30f3df3acb4c7c4d6bd",
    "1": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "2": "recalculate_max_price",
    "3": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "4": "955000",
    "5": "995000",
    "6": "191",
    "id": "0x3850de1bb8f63f41c7e24bcd322a2d0657d3b26c066ea30f3df3acb4c7c4d6bd",
    "recipient": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "queryType": "recalculate_max_price",
    "originator": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "owed": "955000",
    "funds": "995000",
    "pricePerMB": "191"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0x3850de1bb8f63f41c7e24bcd322a2d0657d3b26c066ea30f3df3acb4c7c4d6bd0000000000000000000000004248cb10b8d7f5fb0b2ad54af561e54330aab25600000000000000000000000000000000000000000000000000000000000000e000000000000000000000000028b17326d08992f16d382db2923d0d8b4ff8adb000000000000000000000000000000000000000000000000000000000000e927800000000000000000000000000000000000000000000000000000000000f2eb800000000000000000000000000000000000000000000000000000000000000bf0000000000000000000000000000000000000000000000000000000000000015726563616c63756c6174655f6d61785f7072696365",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 955000;
Funds: 995000;
PricePerMB: 191;

New price is: 191
>>> [object Object]
EVM call result:
 [object Object]
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=1
>>> [object Object]
status code: 200
Traffic (MB): 3000
status code: 200
Owner: 0x28b17326d08992f16d382db2923d0d8b4ff8adb0
http://10.228.207.37:3000
http://10.228.207.37:3000/owner?id=2
>>> [object Object]
status code: 200
Traffic (MB): 2000
EVM call result:
 [object Object]
status code: 200
Owner: 0x77bf44c84ab15150baa1ae772836349788a7cf01
EVM call result:
 [object Object]
event data: {
  "address": "0x59246B6885660b49A43eaD1D655787b4e7fd51E5",
  "blockNumber": 2618,
  "transactionHash": "0x73adc8c6cfc6d8c4b1867f3dc67c32a54123c5be7b17f1ac3b8c1be61d594d07",
  "transactionIndex": 0,
  "blockHash": "0x70e5fba4e6c09f4275704a74e3a8b8b6a10e96120932bd4edecbcf61a2f6b582",
  "logIndex": 0,
  "removed": false,
  "id": "log_be2a263e",
  "returnValues": {
    "0": "0x4631708f01f8ff343bac5bddc110e3d0d498e2ff8dec63684ca4d686e7a37fe9",
    "1": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "2": "calculate_proportional",
    "3": "0x77bF44C84aB15150BAA1aE772836349788a7cF01",
    "4": "20000",
    "5": "40000",
    "6": "50000",
    "id": "0x4631708f01f8ff343bac5bddc110e3d0d498e2ff8dec63684ca4d686e7a37fe9",
    "recipient": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "queryType": "calculate_proportional",
    "originator": "0x77bF44C84aB15150BAA1aE772836349788a7cF01",
    "owed": "20000",
    "funds": "40000",
    "pricePerMB": "50000"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0x4631708f01f8ff343bac5bddc110e3d0d498e2ff8dec63684ca4d686e7a37fe90000000000000000000000004248cb10b8d7f5fb0b2ad54af561e54330aab25600000000000000000000000000000000000000000000000000000000000000e000000000000000000000000077bf44c84ab15150baa1ae772836349788a7cf010000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000009c40000000000000000000000000000000000000000000000000000000000000c350000000000000000000000000000000000000000000000000000000000000001663616c63756c6174655f70726f706f7274696f6e616c",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 20000;
Funds: 40000;
Total owed: 50000;

Proportional: 16000;
Provider: 0x77bF44C84aB15150BAA1aE772836349788a7cF01
>>> [object Object]
event data: {
  "address": "0x59246B6885660b49A43eaD1D655787b4e7fd51E5",
  "blockNumber": 2618,
  "transactionHash": "0x73adc8c6cfc6d8c4b1867f3dc67c32a54123c5be7b17f1ac3b8c1be61d594d07",
  "transactionIndex": 0,
  "blockHash": "0x70e5fba4e6c09f4275704a74e3a8b8b6a10e96120932bd4edecbcf61a2f6b582",
  "logIndex": 1,
  "removed": false,
  "id": "log_4f5f6891",
  "returnValues": {
    "0": "0x1319aa273bd2f234ab0c52a2ad7722ca918da28d2c75d949c399c209354cffc1",
    "1": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "2": "calculate_proportional",
    "3": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "4": "30000",
    "5": "40000",
    "6": "50000",
    "id": "0x1319aa273bd2f234ab0c52a2ad7722ca918da28d2c75d949c399c209354cffc1",
    "recipient": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "queryType": "calculate_proportional",
    "originator": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "owed": "30000",
    "funds": "40000",
    "pricePerMB": "50000"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0x1319aa273bd2f234ab0c52a2ad7722ca918da28d2c75d949c399c209354cffc10000000000000000000000004248cb10b8d7f5fb0b2ad54af561e54330aab25600000000000000000000000000000000000000000000000000000000000000e000000000000000000000000028b17326d08992f16d382db2923d0d8b4ff8adb000000000000000000000000000000000000000000000000000000000000075300000000000000000000000000000000000000000000000000000000000009c40000000000000000000000000000000000000000000000000000000000000c350000000000000000000000000000000000000000000000000000000000000001663616c63756c6174655f70726f706f7274696f6e616c",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 30000;
Funds: 40000;
Total owed: 50000;

Proportional: 24000;
Provider: 0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0
>>> [object Object]
event data: {
  "address": "0x59246B6885660b49A43eaD1D655787b4e7fd51E5",
  "blockNumber": 2618,
  "transactionHash": "0x73adc8c6cfc6d8c4b1867f3dc67c32a54123c5be7b17f1ac3b8c1be61d594d07",
  "transactionIndex": 0,
  "blockHash": "0x70e5fba4e6c09f4275704a74e3a8b8b6a10e96120932bd4edecbcf61a2f6b582",
  "logIndex": 2,
  "removed": false,
  "id": "log_48b647ee",
  "returnValues": {
    "0": "0xd54f5be7e319039bf0f720d900e139a2d88cfa29b343ba520b22d9d148c4f438",
    "1": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "2": "recalculate_max_price",
    "3": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "4": "50000",
    "5": "40000",
    "6": "10",
    "id": "0xd54f5be7e319039bf0f720d900e139a2d88cfa29b343ba520b22d9d148c4f438",
    "recipient": "0x4248cb10B8D7f5fb0B2Ad54AF561e54330aAB256",
    "queryType": "recalculate_max_price",
    "originator": "0x28b17326D08992f16D382DB2923d0D8B4ff8AdB0",
    "owed": "50000",
    "funds": "40000",
    "pricePerMB": "10"
  },
  "event": "_Incoming",
  "signature": "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443",
  "raw": {
    "data": "0xd54f5be7e319039bf0f720d900e139a2d88cfa29b343ba520b22d9d148c4f4380000000000000000000000004248cb10b8d7f5fb0b2ad54af561e54330aab25600000000000000000000000000000000000000000000000000000000000000e000000000000000000000000028b17326d08992f16d382db2923d0d8b4ff8adb0000000000000000000000000000000000000000000000000000000000000c3500000000000000000000000000000000000000000000000000000000000009c40000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000015726563616c63756c6174655f6d61785f7072696365",
    "topics": [
      "0x728621a284344db905b6f900cd01f5cf758a0a4b0336a7979ab7943f1d786443"
    ]
  }
}
Owed: 50000;
Funds: 40000;
PricePerMB: 10;

New price is: 8
>>> [object Object]
EVM call result:
 [object Object]
